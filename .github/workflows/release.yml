on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_TERM_COLOR: always

name: Build and Release

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url}}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  upload_release:
    name: Upload Release Asset
    needs: create_release
    runs-on: ${{matrix.config.os}}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: install libxdo-dev for ubuntu
        if: matrix.config.os == 'ubuntu-latest'
        run: sudo apt-get install -y libxdo-dev
      - name: Cargo Check
        run: cargo check --quiet
      - name: Build
        run: cargo build --release --quiet
      - name: Upload Release Asset Windows
        id: upload-release-asset-windows 
        if: matrix.config.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/release/jiggle.exe
          asset_name: jiggle-win64.exe
          asset_content_type: application/octet-stream
      - name: Upload Release Asset Ubuntu
        id: upload-release-asset-ubuntu
        if: matrix.config.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/release/jiggle
          asset_name: jiggle-linux64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset MacOS
        id: upload-release-asset-macos
        if: matrix.config.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/release/jiggle
          asset_name: jiggle-macos
          asset_content_type: application/octet-stream
